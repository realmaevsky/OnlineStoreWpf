<Page x:Class="TopStoreApp.Pages.AllProducts"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:local="clr-namespace:TopStoreApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="620" d:DesignWidth="1080"
      Title="All Products" Loaded="Page_Loaded">
    <Page.Resources>
        <Style x:Key="topButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#6e7783"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="50">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#dcdcdc"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#d0c0ff"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="15 3"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7b5cd6"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuButtonIcon" TargetType="icon:PackIconMaterial">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Margin" Value="20 2 20 0"/>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <Style x:Key="addButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource SecondBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThirdTextColor}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0 20 0 0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource FirstTextColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="tabButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource FirstTextColor}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7"
                                BorderThickness="0 0 0 1" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#784ff2"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource brdrBrushColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="pagingButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ThirdTextColor}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="1 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5"
                                Padding="10 5"
                                BorderThickness="0 0 0 1" BorderBrush="{DynamicResource pageBrushColor}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="0 0 0 1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7950f2"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="pagingButtonIcon" TargetType="icon:PackIconMaterial">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="gridEditButton" TargetType="Button">
            <Setter Property="Background" Value="#512da8"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#4a148c"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5"
                                Padding="10 5"
                                BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#673ab7"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
            <Setter Property="Background" Value="#d32f2f"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#b71c1c"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f44336"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridButtonIcon" TargetType="icon:PackIconMaterial">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

    </Page.Resources>

    <Border CornerRadius="30"  BorderBrush="{DynamicResource pageBrushColor}" BorderThickness="1">
        <Border.Effect>
            <BlurEffect Radius="1"/>
        </Border.Effect>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" Margin="30 20 20 20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Products" Grid.Row="1" FontSize="32" FontWeight="SemiBold" Margin="0 20 0 0"
                           HorizontalAlignment="Left" Foreground="{DynamicResource FirstTextColor}"/>

                <Button Name ="AddProdButton" 
                        Style="{StaticResource addButton}" 
                        Click="AddProdButton_Click" 
                        Margin="0,24,70,4" 
                        Grid.Row="1" 
                        Width="134">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center"
                                               Width="15" Height="15" Margin="0 1 8 0"/>
                        <TextBlock Text="Додати product"/>
                    </StackPanel>
                </Button>
                <Button Name ="refreshData" Style="{StaticResource addButton}" Click="refreshData_Click" Margin="0,24,10,4" Grid.Row="1" Width="42">
                    <StackPanel Orientation="Horizontal" Width="24">
                        <icon:PackIconMaterial Kind="Refresh" VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Width="24" Height="20" Margin="0 1 8 0"/>
                    </StackPanel>
                </Button>

                <Separator Height="1" Grid.Row="3" Background="#dae2ea" Margin="0 -1 0 10"/>

                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 10 0 0">
                    <Button Name="SortAllProducts" Width="110" Content="Всі products" 
                            Style="{StaticResource tabButton}" Click="SortAllProducts_Click"/>
                    <Button Name="SortInStockTrue" Width="110" Content="In Stock" 
                            Style="{StaticResource tabButton}" Click="SortInStockTrue_Click"/>
                    <Button Name="SortInStockFalse" Width="110" Content="Empty" 
                            Style="{StaticResource tabButton}" Click="SortInStockFalse_Click"/>
                </StackPanel>

                <DataGrid x:Name="ProductsDataGrid" Style="{DynamicResource DataGridStyle1}" 
                            CellStyle="{DynamicResource DataGridCellStyle1}"
                            ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                             RowStyle="{DynamicResource DataGridRowStyle1}" 
                          Grid.Row="5"
                          Margin="0,35,0,0">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn ElementStyle="{DynamicResource CheckBoxStyle1}" CanUserResize="False" Width="auto" >
                            <DataGridCheckBoxColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox Style="{DynamicResource CheckBoxStyle1}"/>
                                </DataTemplate>
                            </DataGridCheckBoxColumn.HeaderTemplate>
                        </DataGridCheckBoxColumn>

                        <DataGridTextColumn Header="Id" IsReadOnly="True" 
                                            CanUserResize="False" Width="auto"
                                            Binding="{Binding Id}"/>
                        <DataGridTemplateColumn Header="Model" IsReadOnly="True" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Border CornerRadius="50" 
                                                Margin="0 0 10 0" Background="{Binding BgColor}">
                                            <TextBlock Text="{Binding Model}" VerticalAlignment="Center"
                                                       HorizontalAlignment="Center" Foreground="{DynamicResource ThirdTextColor}"
                                                       Margin="0 0 0 1"/>
                                        </Border>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Price" IsReadOnly="True" Width="*" Binding="{Binding Price}"/>
                        <DataGridTextColumn Header="Memory" IsReadOnly="True" Width="*" Binding="{Binding Memory}"/>
                        <DataGridTextColumn Header="In Stock" IsReadOnly="True" Width="*" Binding="{Binding InStock}"/>

                        <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Name="editProductButton" Style="{StaticResource gridEditButton}" Click="editProductButton_Click">
                                            <icon:PackIconMaterial Kind="PencilOutline"
                                                                   Style="{StaticResource gridButtonIcon}"/>
                                        </Button>
                                        <Button Name="deleteProductButton_Click" Style="{StaticResource gridRemoveButton}" Click="deleteProductButton_Click">
                                            <icon:PackIconMaterial Kind="DeleteOutline" 
                                                                   Style="{StaticResource gridButtonIcon}"
                                                                   Margin="5 0 0 0"/>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Border>
</Page>

